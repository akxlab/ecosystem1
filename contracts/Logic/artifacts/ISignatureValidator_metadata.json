{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "_signature",
						"type": "bytes"
					}
				],
				"name": "isValidSignature",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"isValidSignature(bytes,bytes)": {
					"details": "Should return whether the signature provided is valid for the provided data",
					"params": {
						"_data": "Arbitrary length data signed on the behalf of address(this)",
						"_signature": "Signature byte array associated with _data MUST return the bytes4 magic value 0x20c13b0b when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Logic/SignMessage.sol": "ISignatureValidator"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Logic/SignMessage.sol": {
			"keccak256": "0xabcc9b593a52469dc3ddf0bfd6badf7662c97b82800a1ec595e6dc2ded4c5745",
			"license": "MIT",
			"urls": [
				"bzz-raw://261ad7c44914a97a0a740432e5829d80ebfe604ea3f546be278698a63dc16a14",
				"dweb:/ipfs/QmUkjdrPFJexruVJ6wziYdTjgCeeYWZ6Js5fiD9X6da4mw"
			]
		}
	},
	"version": 1
}