/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AKXEcosystem,
  AKXEcosystemInterface,
} from "../../../contracts/AKX.sol/AKXEcosystem";

const _abi = [
  {
    inputs: [],
    name: "EthDIDRegistry",
    outputs: [
      {
        internalType: "contract DidRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061010e806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cf9be1cb14602d575b600080fd5b60336047565b604051603e919060bf565b60405180910390f35b600090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000608b6087608384604c565b606c565b604c565b9050919050565b6000609b826076565b9050919050565b600060ab826092565b9050919050565b60b98160a2565b82525050565b600060208201905060d2600083018460b2565b9291505056fea264697066735822122023707eab1d602ee48ee6ccd57dd737031059f8a649169151333752b03d85902964736f6c63430008100033";

type AKXEcosystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AKXEcosystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AKXEcosystem__factory extends ContractFactory {
  constructor(...args: AKXEcosystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AKXEcosystem> {
    return super.deploy(overrides || {}) as Promise<AKXEcosystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AKXEcosystem {
    return super.attach(address) as AKXEcosystem;
  }
  override connect(signer: Signer): AKXEcosystem__factory {
    return super.connect(signer) as AKXEcosystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AKXEcosystemInterface {
    return new utils.Interface(_abi) as AKXEcosystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AKXEcosystem {
    return new Contract(address, _abi, signerOrProvider) as AKXEcosystem;
  }
}
