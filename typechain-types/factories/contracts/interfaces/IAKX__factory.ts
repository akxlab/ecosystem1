/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IAKX, IAKXInterface } from "../../../contracts/interfaces/IAKX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "DexToken",
    outputs: [
      {
        internalType: "contract IERC2055",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "EthDIDRegistry",
    outputs: [
      {
        internalType: "contract DidRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "LabzToken",
    outputs: [
      {
        internalType: "contract LabzERC2055",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "UserDataService",
    outputs: [
      {
        internalType: "contract UserDataServiceResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAKX__factory {
  static readonly abi = _abi;
  static createInterface(): IAKXInterface {
    return new utils.Interface(_abi) as IAKXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IAKX {
    return new Contract(address, _abi, signerOrProvider) as IAKX;
  }
}
