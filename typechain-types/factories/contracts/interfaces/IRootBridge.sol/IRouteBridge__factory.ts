/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRouteBridge,
  IRouteBridgeInterface,
} from "../../../../contracts/interfaces/IRootBridge.sol/IRouteBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "childBridge",
        type: "address",
      },
    ],
    name: "setChildBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IRouteBridge.NonEVMChilds",
        name: "nonEvmBridgeID",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "txTemplateId",
        type: "uint256",
      },
    ],
    name: "setNonEVMChildBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootBridge",
        type: "address",
      },
    ],
    name: "setRootBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_observer",
        type: "address",
      },
    ],
    name: "setRootBridgeObserver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRouteBridge__factory {
  static readonly abi = _abi;
  static createInterface(): IRouteBridgeInterface {
    return new utils.Interface(_abi) as IRouteBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRouteBridge {
    return new Contract(address, _abi, signerOrProvider) as IRouteBridge;
  }
}
