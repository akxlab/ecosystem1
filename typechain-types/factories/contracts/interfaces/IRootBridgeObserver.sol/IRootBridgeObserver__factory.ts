/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRootBridgeObserver,
  IRootBridgeObserverInterface,
} from "../../../../contracts/interfaces/IRootBridgeObserver.sol/IRootBridgeObserver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "ReceivedBridgeEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "TransferBridgeEvent",
    type: "event",
  },
];

export class IRootBridgeObserver__factory {
  static readonly abi = _abi;
  static createInterface(): IRootBridgeObserverInterface {
    return new utils.Interface(_abi) as IRootBridgeObserverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRootBridgeObserver {
    return new Contract(address, _abi, signerOrProvider) as IRootBridgeObserver;
  }
}
