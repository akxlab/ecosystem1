/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyModule,
  DummyModuleInterface,
} from "../../../contracts/modules/DummyModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "ModuleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
    ],
    name: "ModuleRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "_loaded",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_moduleAuthor",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_moduleContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_moduleName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_moduleVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "v1",
        type: "string",
      },
      {
        internalType: "string",
        name: "v2",
        type: "string",
      },
    ],
    name: "compareVersions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reg",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "loadModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleAuthor",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119be806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a6c790391161008c578063c4d66de811610066578063c4d66de81461022b578063d097d0e014610247578063ef4ce6e114610265578063f490694414610283576100ea565b8063a6c79039146101c1578063b94fc157146101dd578063baa3b4d71461020d576100ea565b8063488d9f1e116100c8578063488d9f1e146101495780636465e69f146101675780638aada05d1461018557806393f0899a146101a3576100ea565b80631fc1caee146100ef57806324d4fdec1461010d5780633ea392f31461012b575b600080fd5b6100f76102a1565b6040516101049190610c37565b60405180910390f35b6101156102c7565b6040516101229190610c6d565b60405180910390f35b6101336102da565b6040516101409190610ca1565b60405180910390f35b6101516102e4565b60405161015e9190610ca1565b60405180910390f35b61016f610317565b60405161017c9190610d4c565b60405180910390f35b61018d6103a9565b60405161019a9190610ca1565b60405180910390f35b6101ab6103af565b6040516101b89190610ca1565b60405180910390f35b6101db60048036038101906101d69190610ee3565b6103b9565b005b6101f760048036038101906101f29190610f3f565b6105fe565b6040516102049190610c6d565b60405180910390f35b610215610657565b6040516102229190610d4c565b60405180910390f35b61024560048036038101906102409190610fe3565b6106e9565b005b61024f610869565b60405161025c9190610c37565b60405180910390f35b61026d610893565b60405161027a9190610ca1565b60405180910390f35b61028b610899565b6040516102989190610d4c565b60405180910390f35b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900460ff1681565b6000600554905090565b600060025460036040516020016102fc929190611134565b60405160208183030381529060405280519060200120905090565b60606001805461032690611060565b80601f016020809104026020016040519081016040528092919081815260200182805461035290611060565b801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b5050505050905090565b60025481565b6000600254905090565b60001515600660009054906101000a900460ff1615151461040f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906111a8565b60405180910390fd5b6002548214610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90611214565b60405180910390fd5b60006003805461046290611060565b80601f016020809104026020016040519081016040528092919081815260200182805461048e90611060565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b505050505090503073ffffffffffffffffffffffffffffffffffffffff1663b94fc15783836040518363ffffffff1660e01b815260040161051d929190611234565b602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190611297565b61059d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059490611310565b60405180910390fd5b6105a5610927565b6001600660006101000a81548160ff0219169083151502179055507fdd60e025a59890bf911edf70d31eb7b8609c81d316897488188d3cb2f2c3ee846002546040516105f19190610ca1565b60405180910390a1505050565b6000816040516020016106119190611361565b60405160208183030381529060405280519060200120836040516020016106389190611361565b6040516020818303038152906040528051906020012014905092915050565b60606003805461066690611060565b80601f016020809104026020016040519081016040528092919081815260200182805461069290611060565b80156106df5780601f106106b4576101008083540402835291602001916106df565b820191906000526020600020905b8154815290600101906020018083116106c257829003601f168201915b5050505050905090565b60008060019054906101000a900460ff1615905080801561071a5750600160008054906101000a900460ff1660ff16105b80610747575061072930610a4c565b1580156107465750600160008054906101000a900460ff1660ff16145b5b610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d906113ea565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156107c3576001600060016101000a81548160ff0219169083151502179055505b81600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061080c610a6f565b80156108655760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161085c919061145c565b60405180910390a15b5050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b600380546108a690611060565b80601f01602080910402602001604051908101604052809291908181526020018280546108d290611060565b801561091f5780601f106108f45761010080835404028352916020019161091f565b820191906000526020600020905b81548152906001019060200180831161090257829003601f168201915b505050505081565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166385acd6416002546040518263ffffffff1660e01b81526004016109849190610ca1565b600060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109ca91906115c3565b60076000820151816000015560208201518160010190816109eb91906117a3565b506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040155905050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b604051602001610a7e906118c1565b604051602081830303815290604052805190602001206002819055506000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051602001610aeb90611922565b604051602081830303815290604052805190602001206005819055506040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525060039081610b4b91906117a3565b50600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3559371306040518263ffffffff1660e01b8152600401610ba7919061195a565b600060405180830381600087803b158015610bc157600080fd5b505af1158015610bd5573d6000803e3d6000fd5b505050506000600660006101000a81548160ff021916908315150217905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c2182610bf6565b9050919050565b610c3181610c16565b82525050565b6000602082019050610c4c6000830184610c28565b92915050565b60008115159050919050565b610c6781610c52565b82525050565b6000602082019050610c826000830184610c5e565b92915050565b6000819050919050565b610c9b81610c88565b82525050565b6000602082019050610cb66000830184610c92565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cf6578082015181840152602081019050610cdb565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d1e82610cbc565b610d288185610cc7565b9350610d38818560208601610cd8565b610d4181610d02565b840191505092915050565b60006020820190508181036000830152610d668184610d13565b905092915050565b6000604051905090565b600080fd5b600080fd5b610d8b81610c88565b8114610d9657600080fd5b50565b600081359050610da881610d82565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610df082610d02565b810181811067ffffffffffffffff82111715610e0f57610e0e610db8565b5b80604052505050565b6000610e22610d6e565b9050610e2e8282610de7565b919050565b600067ffffffffffffffff821115610e4e57610e4d610db8565b5b610e5782610d02565b9050602081019050919050565b82818337600083830152505050565b6000610e86610e8184610e33565b610e18565b905082815260208101848484011115610ea257610ea1610db3565b5b610ead848285610e64565b509392505050565b600082601f830112610eca57610ec9610dae565b5b8135610eda848260208601610e73565b91505092915050565b60008060408385031215610efa57610ef9610d78565b5b6000610f0885828601610d99565b925050602083013567ffffffffffffffff811115610f2957610f28610d7d565b5b610f3585828601610eb5565b9150509250929050565b60008060408385031215610f5657610f55610d78565b5b600083013567ffffffffffffffff811115610f7457610f73610d7d565b5b610f8085828601610eb5565b925050602083013567ffffffffffffffff811115610fa157610fa0610d7d565b5b610fad85828601610eb5565b9150509250929050565b610fc081610c16565b8114610fcb57600080fd5b50565b600081359050610fdd81610fb7565b92915050565b600060208284031215610ff957610ff8610d78565b5b600061100784828501610fce565b91505092915050565b6000819050919050565b61102b61102682610c88565b611010565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061107857607f821691505b60208210810361108b5761108a611031565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546110be81611060565b6110c88186611091565b945060018216600081146110e357600181146110f85761112b565b60ff198316865281151582028601935061112b565b6111018561109c565b60005b8381101561112357815481890152600182019150602081019050611104565b838801955050505b50505092915050565b6000611140828561101a565b60208201915061115082846110b1565b91508190509392505050565b7f616c7265616479206c6f61646564000000000000000000000000000000000000600082015250565b6000611192600e83610cc7565b915061119d8261115c565b602082019050919050565b600060208201905081810360008301526111c181611185565b9050919050565b7f696e76616c6964206e616d650000000000000000000000000000000000000000600082015250565b60006111fe600c83610cc7565b9150611209826111c8565b602082019050919050565b6000602082019050818103600083015261122d816111f1565b9050919050565b6000604082019050818103600083015261124e8185610d13565b905081810360208301526112628184610d13565b90509392505050565b61127481610c52565b811461127f57600080fd5b50565b6000815190506112918161126b565b92915050565b6000602082840312156112ad576112ac610d78565b5b60006112bb84828501611282565b91505092915050565b7f696e76616c69642076657273696f6e0000000000000000000000000000000000600082015250565b60006112fa600f83610cc7565b9150611305826112c4565b602082019050919050565b60006020820190508181036000830152611329816112ed565b9050919050565b600061133b82610cbc565b6113458185611091565b9350611355818560208601610cd8565b80840191505092915050565b600061136d8284611330565b915081905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006113d4602e83610cc7565b91506113df82611378565b604082019050919050565b60006020820190508181036000830152611403816113c7565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061144661144161143c8461140a565b611421565b611414565b9050919050565b6114568161142b565b82525050565b6000602082019050611471600083018461144d565b92915050565b600080fd5b600080fd5b60008151905061149081610d82565b92915050565b60006114a96114a484610e33565b610e18565b9050828152602081018484840111156114c5576114c4610db3565b5b6114d0848285610cd8565b509392505050565b600082601f8301126114ed576114ec610dae565b5b81516114fd848260208601611496565b91505092915050565b60008151905061151581610fb7565b92915050565b600060a0828403121561153157611530611477565b5b61153b60a0610e18565b9050600061154b84828501611481565b600083015250602082015167ffffffffffffffff81111561156f5761156e61147c565b5b61157b848285016114d8565b602083015250604061158f84828501611481565b60408301525060606115a384828501611506565b60608301525060806115b784828501611481565b60808301525092915050565b6000602082840312156115d9576115d8610d78565b5b600082015167ffffffffffffffff8111156115f7576115f6610d7d565b5b6116038482850161151b565b91505092915050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261161c565b611663868361161c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006116a061169b6116968461167b565b611421565b61167b565b9050919050565b6000819050919050565b6116ba83611685565b6116ce6116c6826116a7565b848454611629565b825550505050565b600090565b6116e36116d6565b6116ee8184846116b1565b505050565b5b81811015611712576117076000826116db565b6001810190506116f4565b5050565b601f821115611757576117288161109c565b6117318461160c565b81016020851015611740578190505b61175461174c8561160c565b8301826116f3565b50505b505050565b600082821c905092915050565b600061177a6000198460080261175c565b1980831691505092915050565b60006117938383611769565b9150826002028217905092915050565b6117ac82610cbc565b67ffffffffffffffff8111156117c5576117c4610db8565b5b6117cf8254611060565b6117da828285611716565b600060209050601f83116001811461180d57600084156117fb578287015190505b6118058582611787565b86555061186d565b601f19841661181b8661109c565b60005b828110156118435784890151825560018201915060208501945060208101905061181e565b86831015611860578489015161185c601f891682611769565b8355505b6001600288020188555050505b505050505050565b7f44756d6d794d6f64756c65000000000000000000000000000000000000000000600082015250565b60006118ab600b83611091565b91506118b682611875565b600b82019050919050565b60006118cc8261189e565b9150819050919050565b7f414b583300000000000000000000000000000000000000000000000000000000600082015250565b600061190c600483611091565b9150611917826118d6565b600482019050919050565b600061192d826118ff565b9150819050919050565b6000611944600b83610cc7565b915061194f82611875565b602082019050919050565b600060408201905061196f6000830184610c28565b818103602083015261198081611937565b90509291505056fea26469706673582212204ba10b5fb06dfa6cee2a4632e93aa2026aa389ff30449ced16ae36cdd0382df564736f6c63430008100033";

type DummyModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyModule__factory extends ContractFactory {
  constructor(...args: DummyModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyModule> {
    return super.deploy(overrides || {}) as Promise<DummyModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DummyModule {
    return super.attach(address) as DummyModule;
  }
  override connect(signer: Signer): DummyModule__factory {
    return super.connect(signer) as DummyModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyModuleInterface {
    return new utils.Interface(_abi) as DummyModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyModule {
    return new Contract(address, _abi, signerOrProvider) as DummyModule;
  }
}
