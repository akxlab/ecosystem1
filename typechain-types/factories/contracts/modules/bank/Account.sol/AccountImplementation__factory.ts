/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AccountImplementation,
  AccountImplementationInterface,
} from "../../../../../contracts/modules/bank/Account.sol/AccountImplementation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "accountAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "SignAccountRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "pubkey",
        type: "bytes",
      },
    ],
    name: "SignatureVerificationRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "_accountOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_accountType",
    outputs: [
      {
        internalType: "enum AccountImplementation.AccountType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "string",
        name: "_aType",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "keyParts",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reqId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "setAccountSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setKeyParts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reqId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "setSignatureVerificationResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "signatureId",
        type: "bytes32",
      },
    ],
    name: "verifyDilithiumSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610106565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61170b806101156000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063694be0e011610071578063694be0e01461013e578063715018a61461015a5780638da5cb5b14610164578063ac1cf0a214610182578063edaed5e41461019e578063f2fde38b146101bc576100a9565b80630e2562d9146100ae5780630eb624be146100cc5780632c9137e5146100e857806337c6b0411461010457806365ed997014610122575b600080fd5b6100b66101d8565b6040516100c39190610a3a565b60405180910390f35b6100e660048036038101906100e19190610c8e565b610202565b005b61010260048036038101906100fd9190610d19565b61037a565b005b61010c6103b4565b6040516101199190610dd9565b60405180910390f35b61013c60048036038101906101379190610e2a565b6103c7565b005b61015860048036038101906101539190610e6a565b610492565b005b610162610537565b005b61016c61054b565b6040516101799190610ed5565b60405180910390f35b61019c60048036038101906101979190610f26565b610574565b005b6101a6610603565b6040516101b39190610ed5565b60405180910390f35b6101d660048036038101906101d19190610f53565b610629565b005b6000600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001151560008054906101000a900460ff16151503610256576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024d90610fdd565b60405180910390fd5b82600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004826040516102a7919061106e565b908152602001604051809103902060009054906101000a900460ff16600c60146101000a81548160ff021916908360098111156102e7576102e6610d62565b5b02179055503073ffffffffffffffffffffffffffffffffffffffff16632c9137e5826040518263ffffffff1660e01b815260040161032591906110da565b600060405180830381600087803b15801561033f57600080fd5b505af1158015610353573d6000803e3d6000fd5b5050505061035f6106ac565b60006103696101d8565b905061037481610781565b50505050565b610382610803565b8060405160200161039391906110da565b604051602081830303815290604052600f90816103b09190611308565b5050565b600c60149054906101000a900460ff1681565b6103cf610803565b6007600083815260200190815260200160002060009054906101000a900460ff1661042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690611426565b60405180910390fd5b6007600083815260200190815260200160002060006101000a81549060ff021916905560018114610461576000610464565b60015b6008600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61049a610803565b600a600083815260200190815260200160002060009054906101000a900460ff166104fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f190611492565b60405180910390fd5b8060405160200161050b91906110da565b604051602081830303815290604052600d90816105289190611308565b506105336003610881565b5050565b61053f610803565b6105496000610897565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61057c610803565b60016007600061058c600261095c565b815260200190815260200160002060006101000a81548160ff0219169083151502179055507f36f54ec3a7cf25c24a447a6faf9cf0412971901c73e70df286a52b97229733fd6105dc600261095c565b82600f6040516105ee93929190611554565b60405180910390a16106006002610881565b50565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610631610803565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069790611604565b60405180910390fd5b6106a981610897565b50565b61073f600f80546106bc9061112b565b80601f01602080910402602001604051908101604052809291908181526020018280546106e89061112b565b80156107355780601f1061070a57610100808354040283529160200191610735565b820191906000526020600020905b81548152906001019060200180831161071857829003601f168201915b505050505061096a565b600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061078d600361095c565b90506001600a600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507f1c2f922514852d5d33dcab0e5a1d6b462f69b5ed78fd3774f8fd269136f576c9816107e68461098d565b600f6040516107f793929190611624565b60405180910390a15050565b61080b6109f1565b73ffffffffffffffffffffffffffffffffffffffff1661082961054b565b73ffffffffffffffffffffffffffffffffffffffff161461087f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610876906116b5565b60405180910390fd5b565b6001816000016000828254019250508190555050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000601482511461097a57600080fd5b600c6101000a6020830151049050919050565b6060601467ffffffffffffffff8111156109aa576109a9610ac2565b5b6040519080825280601f01601f1916602001820160405280156109dc5781602001600182028036833780820191505090505b509050600c6101000a82026020820152919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a24826109f9565b9050919050565b610a3481610a19565b82525050565b6000602082019050610a4f6000830184610a2b565b92915050565b6000604051905090565b600080fd5b600080fd5b6000610a74826109f9565b9050919050565b610a8481610a69565b8114610a8f57600080fd5b50565b600081359050610aa181610a7b565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610afa82610ab1565b810181811067ffffffffffffffff82111715610b1957610b18610ac2565b5b80604052505050565b6000610b2c610a55565b9050610b388282610af1565b919050565b600067ffffffffffffffff821115610b5857610b57610ac2565b5b610b6182610ab1565b9050602081019050919050565b82818337600083830152505050565b6000610b90610b8b84610b3d565b610b22565b905082815260208101848484011115610bac57610bab610aac565b5b610bb7848285610b6e565b509392505050565b600082601f830112610bd457610bd3610aa7565b5b8135610be4848260208601610b7d565b91505092915050565b600067ffffffffffffffff821115610c0857610c07610ac2565b5b610c1182610ab1565b9050602081019050919050565b6000610c31610c2c84610bed565b610b22565b905082815260208101848484011115610c4d57610c4c610aac565b5b610c58848285610b6e565b509392505050565b600082601f830112610c7557610c74610aa7565b5b8135610c85848260208601610c1e565b91505092915050565b600080600060608486031215610ca757610ca6610a5f565b5b6000610cb586828701610a92565b935050602084013567ffffffffffffffff811115610cd657610cd5610a64565b5b610ce286828701610bbf565b925050604084013567ffffffffffffffff811115610d0357610d02610a64565b5b610d0f86828701610c60565b9150509250925092565b600060208284031215610d2f57610d2e610a5f565b5b600082013567ffffffffffffffff811115610d4d57610d4c610a64565b5b610d5984828501610c60565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600a8110610da257610da1610d62565b5b50565b6000819050610db382610d91565b919050565b6000610dc382610da5565b9050919050565b610dd381610db8565b82525050565b6000602082019050610dee6000830184610dca565b92915050565b6000819050919050565b610e0781610df4565b8114610e1257600080fd5b50565b600081359050610e2481610dfe565b92915050565b60008060408385031215610e4157610e40610a5f565b5b6000610e4f85828601610e15565b9250506020610e6085828601610e15565b9150509250929050565b60008060408385031215610e8157610e80610a5f565b5b6000610e8f85828601610e15565b925050602083013567ffffffffffffffff811115610eb057610eaf610a64565b5b610ebc85828601610c60565b9150509250929050565b610ecf81610a69565b82525050565b6000602082019050610eea6000830184610ec6565b92915050565b6000819050919050565b610f0381610ef0565b8114610f0e57600080fd5b50565b600081359050610f2081610efa565b92915050565b600060208284031215610f3c57610f3b610a5f565b5b6000610f4a84828501610f11565b91505092915050565b600060208284031215610f6957610f68610a5f565b5b6000610f7784828501610a92565b91505092915050565b600082825260208201905092915050565b7f616c726561647920696e697469616c697a656400000000000000000000000000600082015250565b6000610fc7601383610f80565b9150610fd282610f91565b602082019050919050565b60006020820190508181036000830152610ff681610fba565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611031578082015181840152602081019050611016565b60008484015250505050565b600061104882610ffd565b6110528185611008565b9350611062818560208601611013565b80840191505092915050565b600061107a828461103d565b915081905092915050565b600081519050919050565b600082825260208201905092915050565b60006110ac82611085565b6110b68185611090565b93506110c6818560208601611013565b6110cf81610ab1565b840191505092915050565b600060208201905081810360008301526110f481846110a1565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061114357607f821691505b602082108103611156576111556110fc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026111be7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611181565b6111c88683611181565b95508019841693508086168417925050509392505050565b6000819050919050565b60006112056112006111fb84610df4565b6111e0565b610df4565b9050919050565b6000819050919050565b61121f836111ea565b61123361122b8261120c565b84845461118e565b825550505050565b600090565b61124861123b565b611253818484611216565b505050565b5b818110156112775761126c600082611240565b600181019050611259565b5050565b601f8211156112bc5761128d8161115c565b61129684611171565b810160208510156112a5578190505b6112b96112b185611171565b830182611258565b50505b505050565b600082821c905092915050565b60006112df600019846008026112c1565b1980831691505092915050565b60006112f883836112ce565b9150826002028217905092915050565b61131182611085565b67ffffffffffffffff81111561132a57611329610ac2565b5b611334825461112b565b61133f82828561127b565b600060209050601f8311600181146113725760008415611360578287015190505b61136a85826112ec565b8655506113d2565b601f1984166113808661115c565b60005b828110156113a857848901518255600182019150602085019450602081019050611383565b868310156113c557848901516113c1601f8916826112ce565b8355505b6001600288020188555050505b505050505050565b7f696e76616c696420726571756573742069640000000000000000000000000000600082015250565b6000611410601283610f80565b915061141b826113da565b602082019050919050565b6000602082019050818103600083015261143f81611403565b9050919050565b7f696e76616c696420726571756573740000000000000000000000000000000000600082015250565b600061147c600f83610f80565b915061148782611446565b602082019050919050565b600060208201905081810360008301526114ab8161146f565b9050919050565b6114bb81610df4565b82525050565b6114ca81610ef0565b82525050565b600081546114dd8161112b565b6114e78186611090565b9450600182166000811461150257600181146115185761154b565b60ff19831686528115156020028601935061154b565b6115218561115c565b60005b8381101561154357815481890152600182019150602081019050611524565b808801955050505b50505092915050565b600060608201905061156960008301866114b2565b61157660208301856114c1565b818103604083015261158881846114d0565b9050949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115ee602683610f80565b91506115f982611592565b604082019050919050565b6000602082019050818103600083015261161d816115e1565b9050919050565b600060608201905061163960008301866114b2565b818103602083015261164b81856110a1565b9050818103604083015261165f81846114d0565b9050949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061169f602083610f80565b91506116aa82611669565b602082019050919050565b600060208201905081810360008301526116ce81611692565b905091905056fea26469706673582212208d75c7a205fa26194bd38329f8db3302e62d8fb2e10e2adfa396a5b9e5d2a15464736f6c63430008100033";

type AccountImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountImplementation__factory extends ContractFactory {
  constructor(...args: AccountImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountImplementation> {
    return super.deploy(overrides || {}) as Promise<AccountImplementation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccountImplementation {
    return super.attach(address) as AccountImplementation;
  }
  override connect(signer: Signer): AccountImplementation__factory {
    return super.connect(signer) as AccountImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountImplementationInterface {
    return new utils.Interface(_abi) as AccountImplementationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountImplementation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccountImplementation;
  }
}
