/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { UDS, UDSInterface } from "../../../../contracts/modules/uds/UDS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061023d806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302571be3146100465780639a8a059214610076578063b2bdfa7b14610094575b600080fd5b610060600480360381019061005b919061014a565b6100b2565b60405161006d91906101b8565b60405180910390f35b61007e6100e5565b60405161008b91906101ec565b60405180910390f35b61009c6100eb565b6040516100a991906101b8565b60405180910390f35b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61012781610114565b811461013257600080fd5b50565b6000813590506101448161011e565b92915050565b6000602082840312156101605761015f61010f565b5b600061016e84828501610135565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101a282610177565b9050919050565b6101b281610197565b82525050565b60006020820190506101cd60008301846101a9565b92915050565b6000819050919050565b6101e6816101d3565b82525050565b600060208201905061020160008301846101dd565b9291505056fea2646970667358221220655178d3df65f7b450446d1ba0bfea9e759e1742566e9270b06aa88f5d8a43b964736f6c63430008100033";

type UDSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UDSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UDS__factory extends ContractFactory {
  constructor(...args: UDSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UDS> {
    return super.deploy(overrides || {}) as Promise<UDS>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UDS {
    return super.attach(address) as UDS;
  }
  override connect(signer: Signer): UDS__factory {
    return super.connect(signer) as UDS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UDSInterface {
    return new utils.Interface(_abi) as UDSInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): UDS {
    return new Contract(address, _abi, signerOrProvider) as UDS;
  }
}
