/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  XWrapper,
  XWrapperInterface,
} from "../../../../contracts/tokens/xWrapper/XWrapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "NewTokenWrapped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ercType",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isPresale",
        type: "bool",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "wrapERC1155",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "wrapERC20",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "wrapERC721",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a3f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634043362b1461005c5780636508563f1461008c5780636656fc1f146100bc5780638297ab92146100d8578063d46eb11914610108575b600080fd5b61007660048036038101906100719190610643565b610126565b604051610083919061067f565b60405180910390f35b6100a660048036038101906100a19190610643565b61012d565b6040516100b3919061067f565b60405180910390f35b6100d660048036038101906100d1919061073e565b610134565b005b6100f260048036038101906100ed9190610643565b610319565b6040516100ff919061067f565b60405180910390f35b610110610320565b60405161011d919061067f565b60405180910390f35b6000919050565b6000919050565b60008060019054906101000a900460ff161590508080156101655750600160008054906101000a900460ff1660ff16105b806101925750610174306105bd565b1580156101915750600160008054906101000a900460ff1660ff16145b5b6101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c89061083c565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561020e576001600060016101000a81548160ff0219169083151502179055505b8260048190555085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360018190555081600260006101000a81548160ff02191690831515021790555080156103115760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161030891906108ae565b60405180910390a15b505050505050565b6000919050565b60008060019054906101000a900460ff16610370576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103679061093b565b60405180910390fd5b60146001540361041f573073ffffffffffffffffffffffffffffffffffffffff16634043362b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016103d5919061067f565b6020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610970565b90506105ba565b6102d1600154036104cf573073ffffffffffffffffffffffffffffffffffffffff16638297ab92600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610485919061067f565b6020604051808303816000875af11580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190610970565b90506105ba565b6104836001540361057f573073ffffffffffffffffffffffffffffffffffffffff16636508563f600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610535919061067f565b6020604051808303816000875af1158015610554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105789190610970565b90506105ba565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b1906109e9565b60405180910390fd5b90565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610610826105e5565b9050919050565b61062081610605565b811461062b57600080fd5b50565b60008135905061063d81610617565b92915050565b600060208284031215610659576106586105e0565b5b60006106678482850161062e565b91505092915050565b61067981610605565b82525050565b60006020820190506106946000830184610670565b92915050565b6000819050919050565b6106ad8161069a565b81146106b857600080fd5b50565b6000813590506106ca816106a4565b92915050565b6000819050919050565b6106e3816106d0565b81146106ee57600080fd5b50565b600081359050610700816106da565b92915050565b60008115159050919050565b61071b81610706565b811461072657600080fd5b50565b60008135905061073881610712565b92915050565b600080600080600060a0868803121561075a576107596105e0565b5b60006107688882890161062e565b95505060206107798882890161062e565b945050604061078a888289016106bb565b935050606061079b888289016106f1565b92505060806107ac88828901610729565b9150509295509295909350565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610826602e836107b9565b9150610831826107ca565b604082019050919050565b6000602082019050818103600083015261085581610819565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061089861089361088e8461085c565b610873565b610866565b9050919050565b6108a88161087d565b82525050565b60006020820190506108c3600083018461089f565b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610925602b836107b9565b9150610930826108c9565b604082019050919050565b6000602082019050818103600083015261095481610918565b9050919050565b60008151905061096a81610617565b92915050565b600060208284031215610986576109856105e0565b5b60006109948482850161095b565b91505092915050565b7f74797065206e6f7420737570706f727465640000000000000000000000000000600082015250565b60006109d36012836107b9565b91506109de8261099d565b602082019050919050565b60006020820190508181036000830152610a02816109c6565b905091905056fea2646970667358221220e883d71912ac9d233c714e28df9e0d17c2700f18862b5880b760397951126b4464736f6c63430008100033";

type XWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XWrapper__factory extends ContractFactory {
  constructor(...args: XWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<XWrapper> {
    return super.deploy(overrides || {}) as Promise<XWrapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): XWrapper {
    return super.attach(address) as XWrapper;
  }
  override connect(signer: Signer): XWrapper__factory {
    return super.connect(signer) as XWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XWrapperInterface {
    return new utils.Interface(_abi) as XWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XWrapper {
    return new Contract(address, _abi, signerOrProvider) as XWrapper;
  }
}
